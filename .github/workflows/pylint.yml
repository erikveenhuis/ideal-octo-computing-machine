name: Code Quality Check

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  pylint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install project dependencies first
        pip install -r requirements.txt
        # Then install development tools
        pip install pylint
        
    - name: Verify installation
      run: |
        python --version
        pylint --version
        
    - name: Run pylint
      run: |
        # Find Python files, excluding virtual environments and build directories
        PYTHON_FILES=$(find . -name "*.py" -not -path "./.venv/*" -not -path "./venv/*" -not -path "./build/*" -not -path "./.git/*")
        if [ -n "$PYTHON_FILES" ]; then
          echo "Running pylint on files:"
          echo "$PYTHON_FILES"
          pylint $PYTHON_FILES --fail-under=8.0
        else
          echo "No Python files found to analyze"
          exit 1
        fi
